project.ext {
  def commonsLangVersion = '3.9'
  def jacksonVersion = '2.10.0'
  def javaxVersion = '1'
  def jsonVersion = '20180813'
  def junit5Version = '5.3.2'
  def okHttpVersion = '4.4.0'
  def slf4jVersion = '1.7.5'
  def springVersion = '5.2.0.RELEASE'
  def springDataJdbcVersion = '1.1.4.RELEASE'
  def ldapVersion = '2.3.2.RELEASE'
  def mockitoVersion = '2.18.0'
  def swaggerVersion = '2.9.2'
  def swaggerV1Version = '1.5.22'
  def resteasyVersion = '3.5.1.Final'
  def camundaVersion = '7.12.0'
  def shiroVersion = '1.6.0'
  def erinDmsVersion = '1.1.1'

  lib = [

    // Apache Shiro
    shiro          : [
      core  : "org.apache.shiro:shiro-core:${shiroVersion}",
      web   : "org.apache.shiro:shiro-web:${shiroVersion}",
      spring: "org.apache.shiro:shiro-spring:${shiroVersion}",
      hazelcast: "org.apache.shiro:shiro-hazelcast:${shiroVersion}"
    ],

    // ERIN Modules
    erin             : [
        domain_base : dependencies.create("mn.erin.domain:erin-domain-base:1.0.0") {
          exclude group: 'org.slf4j', module: 'slf4j-simple'
        },
        dms_alfresco: dependencies.create("mn.erin.dms:erin-alfresco-connector:${erinDmsVersion}") {
          exclude group: 'org.slf4j', module: 'slf4j-simple'
        },
        cmn         : dependencies.create("mn.erin.common:erin-common-base:1.0.3") {
          exclude group: 'org.slf4j', module: 'slf4j-simple'
        },
        cmn_rest    : dependencies.create("mn.erin.common:erin-common-rest:1.0.0") {
          exclude group: 'org.slf4j', module: 'slf4j-simple'
        },
        cmn_spring  : dependencies.create("mn.erin.common:erin-common-spring:1.0.0") {
          exclude group: 'org.slf4j', module: 'slf4j-simple'
        },
        cmn_jdbc    : dependencies.create("mn.erin.common:erin-common-jdbc:1.0.0") {
          exclude group: 'org.slf4j', module: 'slf4j-simple'
        },
        mongo    : dependencies.create("mn.erin.common:erin-common-mongodb:1.0.0") {
          exclude group: 'org.slf4j', module: 'slf4j-simple'
        },
        swagger_ui    : dependencies.create("mn.erin.common:erin-swagger-ui:1.0.0") {
          exclude group: 'org.slf4j', module: 'slf4j-simple'
        }
    ],

    soap           : [
      soap_xml: "javax.xml.soap:javax.xml.soap-api:1.4.0"
    ],

    saaj           : [
      saaj_message: "com.sun.xml.messaging.saaj:saaj-impl:1.5.1"
    ],

    camunda            : [
      process_engine       : "org.camunda.bpm:camunda-engine:${camundaVersion}",
      process_engine_spring: "org.camunda.bpm:camunda-engine-spring:${camundaVersion}",

      plugin_spin          : "org.camunda.bpm:camunda-engine-plugin-spin:${camundaVersion}",
      json_jackson         : "org.camunda.spin:camunda-spin-dataformat-json-jackson:1.8.0"
    ],

    // Apache
    commons            : [
      lang       : "org.apache.commons:commons-lang3:${commonsLangVersion}",
      collections: "commons-collections:commons-collections:3.2.2"
    ],

    // Logging
    slf4j              : "org.slf4j:slf4j-api:${slf4jVersion}",
    slf4j_nop          : "org.slf4j:slf4j-nop:${slf4jVersion}",
    slf4j_simple       : "org.slf4j:slf4j-simple:${slf4jVersion}",

    // Spring
    spring             : [
      mvc    : "org.springframework:spring-webmvc:${springVersion}",
      web    : "org.springframework:spring-web:${springVersion}",
      context: "org.springframework:spring-context:${springVersion}",
      test   : "org.springframework:spring-test:${springVersion}"
    ],

    spring_ldap        : "org.springframework.ldap:spring-ldap-core:${ldapVersion}",

    springData         : [
      jdbc: "org.springframework.data:spring-data-jdbc:${springDataJdbcVersion}"
    ],

    // JUnit
    junit              : [
      dependencies.create('junit:junit:4.12') { transitive = false },
      dependencies.create('org.hamcrest:hamcrest-all:1.3') { transitive = false },
      dependencies.create('pl.pragmatists:JUnitParams:1.0.5') { transitive = false }
    ],

    junit5             : "org.junit.jupiter:junit-jupiter-api:${junit5Version}",

    mockito            : "org.mockito:mockito-core:${mockitoVersion}",

    // Others
    json               : "org.json:json:${jsonVersion}",
    okHttp3            : "com.squareup.okhttp3:okhttp:${okHttpVersion}",
    retrofit2          : 'com.squareup.retrofit2:retrofit:2.6.0',
    adapter_rxjava     : 'com.squareup.retrofit2:adapter-rxjava:2.6.0',
    converter_gson     : 'com.squareup.retrofit2:converter-gson:2.6.0',
    rxjava             : 'io.reactivex:rxjava:1.3.8',
    logging_interceptor: 'com.squareup.okhttp3:logging-interceptor:3.4.1',
    alfresco_open_cmis : 'org.alfresco.cmis.client:alfresco_opencmis_extension:1.1',

    javax              : [
      inject : "javax.inject:javax.inject:${javaxVersion}",
      servlet: "javax.servlet:javax.servlet-api:3.1.0",
      mail          : "javax.mail:mail:1.4.7"
    ],

    jackson            : [
      databind: "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}",
      core    : "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    ],

    jaxrs              : [
      dependencies.create("org.jboss.resteasy:resteasy-jaxrs:${resteasyVersion}"),
      "org.jboss.spec.javax.ws.rs:jboss-jaxrs-api_2.1_spec:1.0.0.Final",
    ],


    gson               : 'com.google.code.gson:gson:2.8.0',

    swagger            : [
      v1       : [
        annotations: "io.swagger:swagger-annotations:${swaggerV1Version}"
      ],
      springfox: "io.springfox:springfox-swagger2:${swaggerVersion}",
      ui       : "io.springfox:springfox-swagger-ui:${swaggerVersion}"
    ]
  ]
}
