ALTER SESSION SET CURRENT_SCHEMA = ERIN;
-- AIM TABLES :

CREATE TABLE AIM_MEMBERSHIP
   (	MEMBERSHIP_ID VARCHAR2(50 BYTE) NOT NULL,
	USER_ID VARCHAR2(50 BYTE) NOT NULL,
	GROUP_ID VARCHAR2(50 BYTE) NOT NULL,
	ROLE_ID VARCHAR2(50 BYTE) NOT NULL,
	TENANT_ID VARCHAR2(50 BYTE) NOT NULL,
    CONSTRAINT AIM_MEMBERSHIP_PK PRIMARY KEY (MEMBERSHIP_ID),
    CONSTRAINT AIM_MEMBERSHIP_CONSTRAINT UNIQUE (USER_ID, GROUP_ID, ROLE_ID, TENANT_ID)
   );


CREATE TABLE AIM_ROLE
   (	ROLE_ID VARCHAR2(50 BYTE) NOT NULL,
	TENANT_ID VARCHAR2(50 BYTE) NOT NULL,
	NAME VARCHAR2(100 BYTE) NOT NULL,
    CONSTRAINT AIM_ROLE_PK PRIMARY KEY (ROLE_ID)
   );


CREATE TABLE AIM_ROLE_PERMISSION
   (	ROLE_ID VARCHAR2(50 BYTE) NOT NULL,
	PERMISSION_ID VARCHAR2(50 BYTE) NOT NULL,
    CONSTRAINT AIM_ROLE_PERMISSION_PK PRIMARY KEY (ROLE_ID, PERMISSION_ID)
   );

CREATE TABLE AIM_GROUP
   (	ID VARCHAR2(50 BYTE) NOT NULL,
	TENANT_ID VARCHAR2(50 BYTE) NOT NULL,
    PARENT_ID VARCHAR2(50 BYTE),
    NAME VARCHAR2(70 BYTE),
    NTH_SIBLING NUMBER NOT NULL,
    CONSTRAINT AIM_GROUP_PK PRIMARY KEY (ID)
   );

CREATE TABLE AIM_GROUP_PARENT_CHILD
   (	PARENT_ID VARCHAR2(50 BYTE) NOT NULL,
	CHILD_ID VARCHAR2(50 BYTE) NOT NULL,
    CONSTRAINT AIM_GROUP_PARENT_CHILD_PK PRIMARY KEY (PARENT_ID, CHILD_ID)
   );
   
   
-- DOCUMENT TABLES 
   
CREATE TABLE DOCUMENT
   (	ID VARCHAR2(80 BYTE) NOT NULL,
	DOCUMENT_INFO_ID VARCHAR2(100 BYTE) NOT NULL,
	PROCESS_INSTANCE_ID VARCHAR2(100 BYTE) NOT NULL,
	NAME VARCHAR2(200 BYTE) NOT NULL,
	CATEGORY VARCHAR2(100 BYTE) NOT NULL,
	SUB_CATEGORY VARCHAR2(100 BYTE) NOT NULL,
    REFERENCE VARCHAR2(1000 BYTE) NOT NULL,
    SOURCE VARCHAR2(50 BYTE) NOT NULL,
    CONSTRAINT DOCUMENT_PK PRIMARY KEY (ID)
   );
   
   
CREATE TABLE DOCUMENT_INFO
   (	ID VARCHAR2(100 BYTE) NOT NULL,
	DOCUMENT_PARENT_ID VARCHAR2(100 BYTE),
	NAME VARCHAR2(100 BYTE) NOT NULL,
    TYPE VARCHAR2(50 BYTE),
    CONSTRAINT DOCUMENT_INFO_PK PRIMARY KEY (ID)
   );
   
-- PROCESS, PROCESS PARAMETERS 

CREATE TABLE PROCESS
   (	PROCESS_INSTANCE_ID VARCHAR2(50 BYTE) NOT NULL,
	STARTED_DATE DATE NOT NULL,
	FINISHED_DATE DATE,
    CONSTRAINT PROCESS_PK PRIMARY KEY (PROCESS_INSTANCE_ID)
   );

CREATE TABLE PROCESS_PARAMETER
   (	PROCESS_INSTANCE_ID VARCHAR2(50 BYTE) NOT NULL,
	PARAMETER_NAME VARCHAR2(50 BYTE) NOT NULL,
	PARAMETER_VALUE VARCHAR2(4000 BYTE) NOT NULL,
	PARAMETER_DATA_TYPE VARCHAR2(50 BYTE) NOT NULL,
	PARAMETER_ENTITY_TYPE VARCHAR2(50 BYTE) NOT NULL,
    CONSTRAINT PROCESS_PARAMETER_PK PRIMARY KEY (PROCESS_INSTANCE_ID, PARAMETER_NAME)
   );

CREATE TABLE PROCESS_LARGE_PARAMETER
   (
    PROCESS_INSTANCE_ID VARCHAR2(50 BYTE) NOT NULL,
	PARAMETER_NAME VARCHAR2(200 BYTE) NOT NULL,
	PARAMETER_VALUE CLOB NOT NULL,
	PARAMETER_DATA_TYPE VARCHAR2(150 BYTE) NOT NULL,
	PARAMETER_ENTITY_TYPE VARCHAR2(150 BYTE) NOT NULL,
    CONSTRAINT PROCESS_LARGE_PARAMETER_PK PRIMARY KEY (PROCESS_INSTANCE_ID, PARAMETER_NAME)
   );
   
-- PROCESS REQUEST, PROCESS REQUEST PARAMETER, PROCESS TYPE

--------------------------------------------------------
--  Use this if you need to delete a sequence or trigger
--------------------------------------------------------
DROP SEQUENCE PROCESS_REQUEST_SEQ;

--------------------------------------------------------
--  (1) Create a sequence - used by trigger when a new process is inserted - updated to start from 0 (4/20/2020)
--------------------------------------------------------
CREATE SEQUENCE PROCESS_REQUEST_SEQ
      INCREMENT BY 1
      START WITH 1
      NOMAXVALUE
      NOCYCLE
      CACHE 50;

--------------------------------------------------------
--  (2) Run the table creation queries below
--------------------------------------------------------

CREATE TABLE PROCESS_REQUEST
   (	PROCESS_REQUEST_ID VARCHAR2(50 BYTE) NOT NULL,
	PROCESS_TYPE_ID VARCHAR2(50 BYTE) NOT NULL,
	GROUP_ID VARCHAR2(50 BYTE) NOT NULL,
	REQUESTED_USER_ID VARCHAR2(50 BYTE) NOT NULL,
	CREATED_TIME DATE NOT NULL,
	ASSIGNED_USER_ID VARCHAR2(50 BYTE),
	PROCESS_INSTANCE_ID VARCHAR2(50 BYTE),
	ASSIGNED_TIME DATE,
	PROCESS_REQUEST_STATE VARCHAR2(20 BYTE) NOT NULL,
    CONSTRAINT PROCESS_REQUEST_PK1 PRIMARY KEY (PROCESS_REQUEST_ID)
   );


CREATE TABLE PROCESS_REQUEST_PARAMETER
   (	PROCESS_REQUEST_ID VARCHAR2(100 BYTE) NOT NULL,
	PARAMETER_NAME VARCHAR2(100 BYTE) NOT NULL,
	PARAMETER_VALUE VARCHAR2(100 BYTE) NOT NULL,
	PARAMETER_TYPE VARCHAR2(50 BYTE) NOT NULL,
    CONSTRAINT PROCESS_REQ_PARAM_PK1 PRIMARY KEY (PROCESS_REQUEST_ID, PARAMETER_NAME)
   );

CREATE TABLE PROCESS_TYPE
( 
  PROCESS_TYPE_ID VARCHAR2(50 BYTE) NOT NULL,
  DEFINITION_KEY VARCHAR2(100 BYTE) NOT NULL,
  VERSION VARCHAR2(20 BYTE),
  NAME NVARCHAR2(50) NOT NULL,
  PROCESS_DEFINITION_TYPE VARCHAR2(20 BYTE) NOT NULL,
  PROCESS_TYPE_CATEGORY VARCHAR (100 BYTE) NOT NULL,
  CONSTRAINT PROCESS_TYPE_PK1 PRIMARY KEY (PROCESS_TYPE_ID)
);


-------------MESSAGES TABLE-----------------

CREATE TABLE MESSAGES
(
    ID VARCHAR2(75) NOT NULL ,
    KEY VARCHAR2(75) NOT NULL ,
    LOCALE VARCHAR2(75),
    TEXT VARCHAR2(300),
    CONSTRAINT MESSAGES_PK PRIMARY KEY (ID),
    CONSTRAINT MESSAGES_CONSTRAINT UNIQUE (KEY, LOCALE)
);


-------------LOAN PRODUCTS -----------------

CREATE TABLE ERIN_BPMS_PRODUCT
   (
    PRODUCT_ID VARCHAR2(10 BYTE) NOT NULL,
	APPLICATION_CATEGORY VARCHAR2(100 BYTE) NOT NULL,
	CATEGORY_DESCRIPTION VARCHAR2(100 BYTE),
	PRODUCT_DESCRIPTION VARCHAR2(200 BYTE) NOT NULL,
	TYPE VARCHAR2(100 BYTE) NOT NULL,
	LOAN_TO_VALUE_RATIO VARCHAR2(10 BYTE) NOT NULL,
	HAS_COLLATERAL NUMBER(1) NOT NULL,
	HAS_INSURANCE NUMBER(1) NOT NULL,
    BORROWER_TYPE VARCHAR2(10 BYTE),
    CONSTRAINT PRODUCT_COMPOSITE_KEY PRIMARY KEY (PRODUCT_ID, APPLICATION_CATEGORY)
   );

CREATE TABLE ERIN_BPMS_COLLATERAL_PRODUCT
   (    
        ID VARCHAR2(10 BYTE) NOT NULL,
	TYPE VARCHAR2(100 BYTE) NOT NULL,
	SUB_TYPE VARCHAR2(100 BYTE) NOT NULL,
	DESCRIPTION VARCHAR2(200 BYTE) NOT NULL,
	MORE_INFORMATION VARCHAR2(200 BYTE)NOT NULL,
	CONSTRAINT COLLATERAL_PRODUCT_PK PRIMARY KEY (ID)
   );

CREATE TABLE ERIN_BPMS_TASK_FORM_RELATION
(
    TASK_DEFINITION_ID VARCHAR2(75 BYTE) NOT NULL,
    FORM_VALUE CLOB NOT NULL,
    ENTITY VARCHAR2(25 BYTE) NOT NULL,
    CONSTRAINT ERIN_BPMS_FORM_RELATION_PK PRIMARY KEY ( TASK_DEFINITION_ID )
);

---------LOAN CONTRACT-----------

CREATE TABLE LOAN_CONTRACT_PROCESS_REQUEST (
   PROCESS_INSTANCE_ID VARCHAR(50) NOT NULL PRIMARY KEY,
   LOAN_CONTRACT_ID VARCHAR(50) UNIQUE,
   LOAN_CONTRACT_TYPE VARCHAR(50) NOT NULL,
   LOAN_ACCOUNT VARCHAR(50),
   LOAN_AMOUNT NUMBER,
   CREATED_DATE DATE NOT NULL,
   ASSIGNED_USER_ID VARCHAR(50) NOT NULL,
   GROUP_ID VARCHAR(50) NOT NULL,
   TENANT_ID VARCHAR(20),
   STATE VARCHAR(20),
   CIF_NUMBER VARCHAR2(50 BYTE),
   PRODUCT_DESCRIPTION VARCHAR2(100 BYTE)
);

CREATE TABLE LOAN_CONTRACT_PARAMETER(
    PROCESS_INSTANCE_ID VARCHAR(50) NOT NULL,
    DEF_KEY VARCHAR(100) NOT NULL,
    PARAMETER_VALUE CLOB NOT NULL,
    PARAMETER_VALUE_TYPE VARCHAR(20),
    PARAMETER_ENTITY_TYPE VARCHAR(20)
);


-------BPMS DEFAULT PARAMETERS----------

CREATE TABLE ERIN_BPMS_DEFAULT_PARAMETER(
  PROCESS_TYPE VARCHAR2(50) NOT NULL,
  ENTITY  VARCHAR2(50) NOT NULL,
  PARAMETER_NAME  VARCHAR2(50) NOT NULL,
  PARAMETER_VALUE CLOB NOT NULL,
  PARAMETER_DATA_TYPE  VARCHAR2(50) NOT NULL
);


------ORGANIZATION REGISTRATION---------

CREATE TABLE ERIN_ORG_SALARY
   (	"CONTRACTID" NUMBER(38,0) NOT NULL ENABLE, 
	"CONTRACTNUMBER" VARCHAR2(40 BYTE), 
	"CIF" VARCHAR2(9 BYTE), 
	"CONTRACTBRANCH" VARCHAR2(4 BYTE), 
	"CNAME" VARCHAR2(255 BYTE), 
	"FCNAME" VARCHAR2(255 BYTE), 
	"LOVNUMBER" VARCHAR2(50 BYTE), 
	"CACCOUNTID" VARCHAR2(10 BYTE), 
	"EXPOSURECATEGORY_CODE" VARCHAR2(10 BYTE), 
	"EXPOSURECATEGORY_DESCRIPTION" VARCHAR2(255 BYTE), 
	"CCREATEDT" DATE, 
	"HRCNT" NUMBER(20,0), 
	"EMPNAME" VARCHAR2(255 BYTE), 
	"EMPPHONE" VARCHAR2(255 BYTE), 
	"FORM4001" DATE, 
	"CONTRACTDT" DATE, 
	"EXPIREDT" DATE, 
	"MSTARTSALARY" DATE, 
	"MENDSALARY" DATE, 
	"ARATE" NUMBER(18,2), 
	"ERATE" NUMBER(18,2), 
	"CREATED_USERID" VARCHAR2(50 BYTE), 
	"LAST_UPDATED_BY" VARCHAR2(50 BYTE), 
	"CREATED_AT" DATE, 
	"UPDATED_AT" DATE, 
	"COUNTRYREGNUMBER" VARCHAR2(50 BYTE), 
	"REGISTERNUMBER" VARCHAR2(50 BYTE), 
	"EXTENSION_DT" DATE, 
	"LEAKAGE" NUMBER(18,2), 
	"CORPORATE_TYPE" NUMBER(1,0), 
	"LASTCONTRACTNO" VARCHAR2(255 BYTE), 
	"SALARYTRANFEE" NUMBER DEFAULT 0, 
	"CHARGEGLACCOUNT" VARCHAR2(12 BYTE) DEFAULT 42051400, 
	"IS_SALARY_LOAN" NUMBER(1,0), 
	"RELEASEEMPNAME" VARCHAR2(255 BYTE), 
	"ADDITION_INFO" NCLOB DEFAULT NULL, 
	"CORPORATERANK" VARCHAR2(255 BYTE), 
	"RECORD_STAT" VARCHAR2(4 BYTE) DEFAULT 'O', 
	"AUTH_STAT" CHAR(4 CHAR) DEFAULT 'A', 
	"MOD_NO" NUMBER(4,0) DEFAULT 1, 
	"MAKER_ID" VARCHAR2(48 CHAR), 
	"MAKER_DT_STAMP" DATE, 
	"CHECKER_ID" VARCHAR2(48 BYTE), 
	"CHECKER_DT_STAMP" DATE, 
	"ONCE_AUTH" CHAR(1 CHAR) DEFAULT 'N', 
	"INTCOND" CHAR(8 CHAR) DEFAULT 'ST', 
	"ERATE_MAX" NUMBER(18,2), 
	"SDAY1" CHAR(8 CHAR) DEFAULT '11', 
	"SDAY2" CHAR(8 CHAR) DEFAULT '25', 
	"STIME" CHAR(4 CHAR) DEFAULT '2', 
	"CYEAR" CHAR(10 CHAR) DEFAULT '1', 
	"CEXTENDED" CHAR(1 CHAR) DEFAULT 'N', 
	"CEXTENDED_DATE" DATE, 
	"CEXTENDYEAR" CHAR(4 CHAR), 
	"CCREATED_DATE" DATE, 
	"ADDITIONAL_INFO" VARCHAR2(4000 BYTE), 
	"DANREGNUMBER" VARCHAR2(50 BYTE), 
	"DISTRICT" VARCHAR2(500 BYTE), 
	"ONLINESAL" CHAR(4 CHAR) DEFAULT 'N', 
	"TEMPORARY_STATE" VARCHAR2(20 BYTE), 
	"PROCESS_INSTANCE_ID" VARCHAR2(50 BYTE)
   );
   
   
   
    CREATE TABLE ERIN_ORG_LEASING 
   (	"CONTRACTBRANCH" VARCHAR2(4 BYTE) NOT NULL ENABLE, 
	"REGISTERNUMBER" VARCHAR2(50 BYTE), 
	"NAME" VARCHAR2(255 BYTE), 
	"CONTRACTID" NUMBER(38,0) NOT NULL ENABLE, 
	"CONTRACTDT" DATE, 
	"CYEAR" CHAR(8 CHAR), 
	"EXPIREDT" DATE, 
	"FEE" NUMBER, 
	"LASTCONTRACTNO" VARCHAR2(255 BYTE), 
	"CUSTTYPE" CHAR(4 CHAR), 
	"EXPOSURECATEGORY_CODE" VARCHAR2(10 BYTE), 
	"EXPOSURECATEGORY_DESCRIPTION" VARCHAR2(255 BYTE), 
	"CIF" VARCHAR2(9 BYTE), 
	"COUNTRYREGNUMBER" VARCHAR2(50 BYTE), 
	"BIRTHDT" DATE, 
	"ADDRESS" VARCHAR2(500 BYTE), 
	"PHONE" VARCHAR2(50 BYTE), 
	"MAIL" VARCHAR2(255 BYTE), 
	"PRODUCTCAT" VARCHAR2(255 BYTE), 
	"PRODUCTDESC" VARCHAR2(500 BYTE), 
	"CONTACTNAME" VARCHAR2(255 BYTE), 
	"CONTACTPHONE" VARCHAR2(50 BYTE), 
	"CONTACTEMAIL" VARCHAR2(255 BYTE), 
	"CONTACTDESC" VARCHAR2(500 BYTE), 
	"CHARGETYPE" CHAR(10 CHAR), 
	"CHARGEAMOUNT" VARCHAR2(255 BYTE), 
	"LOANAMOUNT" VARCHAR2(255 BYTE), 
	"SETTLEMENTDATE" VARCHAR2(50 BYTE), 
	"SETTLEMENTACCOUNT" VARCHAR2(50 BYTE), 
	"CONDITION" VARCHAR2(10 BYTE), 
	"RATE" NUMBER(18,2), 
	"DISCHARGE" NUMBER, 
	"LEASING" CHAR(4 CHAR), 
	"BNPL" CHAR(4 CHAR), 
	"TERMINALID" VARCHAR2(100 BYTE), 
	"CEXTENDYEAR" CHAR(4 CHAR), 
	"CEXTENDED" CHAR(4 CHAR), 
	"CEXTENDED_DATE" DATE, 
	"RECORD_STAT" VARCHAR2(4 BYTE), 
	"CREATED_USERID" VARCHAR2(50 BYTE), 
	"LAST_UPDATED_BY" VARCHAR2(50 BYTE), 
	"CREATED_AT" DATE, 
	"UPDATED_AT" DATE, 
	"CHECKER_ID" VARCHAR2(48 BYTE), 
	"SETTLEMENTPERCENT" VARCHAR2(50 BYTE), 
	"MAKER_ID" VARCHAR2(48 BYTE), 
	"MAKER_DT_STAMP" DATE, 
	"CHECKER_DT_STAMP" DATE, 
	"MOD_NO" NUMBER(4,0), 
	"PROCESS_INSTANCE_ID" VARCHAR2(50 BYTE)
   );


  
  CREATE TABLE BI_PATH
      ("PROCESS_TYPE_ID" VARCHAR2(50 BYTE),
      "PRODUCT_CODE" VARCHAR2(10 BYTE) NOT NULL ENABLE,
      "FOLDER" VARCHAR2(50 BYTE),
      "PATH" VARCHAR2(100 BYTE),
     CONSTRAINT "BI_PATH_UNIQUE" UNIQUE ("PROCESS_TYPE_ID", "PRODUCT_CODE")
     );


CREATE TABLE ERIN_OL_UNION
( 
"CUSTOMER_NUMBER" VARCHAR2(40 BYTE),
"REGISTER_ID" VARCHAR2(40 BYTE),
"KEY_FIELD" VARCHAR2(40 BYTE),
"TRACK_NUMBER" VARCHAR2(40 BYTE) NOT NULL ENABLE,
"PRODUCT_CATEGORY" VARCHAR2(40 BYTE),
"PROCESS_REQUEST_ID" VARCHAR2(40 BYTE),
"PROCESS_TYPE_ID" VARCHAR2(40 BYTE),
"REQUEST_TYPE" VARCHAR2(40 BYTE) NOT NULL ENABLE,
"DATE_TIME" DATE NOT NULL ENABLE
)

